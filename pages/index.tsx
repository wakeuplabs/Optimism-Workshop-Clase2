import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useAccount } from "wagmi";

import {CodingShowToken__factory} from "../typechain-types"
import { ethers } from 'ethers';
import { useState } from 'react';

const NFT_CONTRACT_ADDRESS = "0xC0f1727c7F056552E5179e401BCCC792482Bc43D";


const Home: NextPage = () => {

  const { isConnected  } = useAccount()

  const [isMinting, setIsMinting] = useState(false)

  const handleMint = async () => {

    if (isMinting) return;

    const provider = new ethers.BrowserProvider((window as any).ethereum);
    const signer = await provider.getSigner();

    const tokenContract = CodingShowToken__factory.connect(NFT_CONTRACT_ADDRESS, signer);

    setIsMinting(true)

    const tx = await tokenContract.mint({ value: ethers.parseEther("0.0001") }) as any;

    const txHash = tx.hash;

    await provider.waitForTransaction(txHash)

    const txReceipt = await provider.getTransactionReceipt(txHash);


    const tokenId = txReceipt!.logs[0].topics[3].toString()

    console.log(tokenId)

    const tokenUri = await tokenContract.tokenURI(tokenId)

    console.log("token uri", tokenUri)

    setIsMinting(false)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <div style={{padding:20}}>
          {!isMinting && <button disabled={!isConnected} onClick={handleMint}>Buy me</button>}
          {isMinting && "Loading..."}
        </div>
      </main>

    </div>
  );
};

export default Home;
